services:
  webapp:
    build:
      context: webapp
      target: dev
    restart: "no"
    environment:
      POLLING: ${POLLING:-false}
      VITE_API_URL: ${VITE_API_URL:-https://api.easymotion.devlocal}
    ports:
      # add variable in .env to change port
      - "${WEB_DEV_PORT:-8082}:5173"
    volumes:
      - ./webapp:/app
    depends_on:
      api:
        condition: service_healthy
      db:
        condition: service_started
    command: >
      sh -c "

      if [ ! -d "/app/node_modules" ]; then
        echo 'Dependencies are not installed.';
        echo 'Attempting to install dependencies... (this may take a while)';
        npm ci;
      fi

      if [ ! -d "/app/client" ]; then
        echo 'API client is missing.';
        echo 'Attempting to generate API client';
        npm run generate-client;
      fi

      npm run dev;"

  api:
    build:
      context: api
      target: dev
    restart: "no"
    ports:
      # add variable in .env to change port
      - "${API_DEV_PORT:-8081}:3000"
    volumes:
      - ./api:/app
    depends_on:
      db:
        condition: service_started
    environment:
      DATABASE_URL: ${DATABASE_URL}
    healthcheck:
      # Check if the API is up and running every 5 seconds for ~8 minutes
      test: [ "CMD", "curl", "-f", "http://localhost:3000/swagger/json" ]
      interval: 5s
      timeout: 5s
      retries: 100
      start_period: 5s
    command: >
      sh -c "

      if [ ! -d "/app/node_modules" ]; then
        echo 'Dependencies are not installed.';
        echo 'Attempting to install dependencies... (this may take a while)';
        npm ci;
      fi
      
      npm run start:dev;"

  generate-client:
    image: node:20-alpine
    profiles:
      - generate-client
    working_dir: /app
    volumes:
      - ./webapp/client:/app/client
    command: >
      npx swagger-typescript-api -p http://api:3000/swagger/json -o /app/client --modular
    depends_on:
      - api

  db:
    image: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      # add variable in .env to change port
      - "${PG_DEV_PORT:-5432}:5432"
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    depends_on:
      api:
        condition: service_started
      webapp:
        condition: service_started
    environment:
      CERT_PATH: "/certs"
      DOMAIN: "*.easymotion.devlocal"
    volumes:
      - "./nginx/dev.conf:/etc/nginx/conf.d/default.conf"
      - "./nginx/.ssl:/certs" # gitignored folder, contains dev ssl certificates
    ports:
      - 80:80
      - 443:443

  # Web-based PostgreSQL admin tool
  pgadmin:
    image: dpage/pgadmin4
    restart: "no"
    ports:
      # add variable in .env to change port
      - "${PG_ADMIN_PORT:-8083}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: db@easymotion.devlocal
      PGADMIN_DEFAULT_PASSWORD: 1234
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  pgdata:
  pgadmin_data:
