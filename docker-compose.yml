services:
  webapp:
    build:
      context: webapp
      dockerfile: Dockerfile.dev
    restart: "no"
    environment:
      POLLING: ${POLLING:-false}
      AUTO_INSTALL_DEPS: ${WEBAPP_AUTO_INSTALL_DEPS:-true}
      VITE_API_URL: ${WEBAPP_VITE_API_URL:-https://api.easymotion.devlocal}
    ports:
      # add variable in .env to change port
      - "${WEB_DEV_PORT:-8082}:5173"
    volumes:
      - .:/workspace:cached
    depends_on:
      api:
        condition: service_healthy
    command: npm run dev

  api:
    build:
      context: api
      dockerfile: Dockerfile.dev
    ports:
      # add variable in .env to change port
      - "${API_DEV_PORT:-8081}:3000"
      - "${API_PRISMA_STUDIO_PORT:-5555}:5555"
    volumes:
      - .:/workspace:cached
    depends_on:
      db:
        condition: service_started
    environment:
      AUTO_INSTALL_DEPS: ${API_AUTO_INSTALL_DEPS:-true}
      FRONTEND_URL: ${API_FRONTEND_URL:-https://easymotion.devlocal}
      DATABASE_URL: ${DATABASE_URL}
      SMTP_HOST: ${API_SMTP_HOST:-mailhog}
      SMTP_PORT: ${API_SMTP_PORT:-1025}
      SMTP_SECURE: ${API_SMTP_SECURE:-false}
      SMTP_USER: ${API_SMTP_USER:-}
      SMTP_PASSWORD: ${API_SMTP_PASSWORD:-}
      JWT_SECRET: ${API_JWT_SECRET:-jwtsecretkey}
      JWT_AUDIENCE: ${API_JWT_AUDIENCE:-easymotion.dev}
      JWT_ISSUER: ${API_JWT_ISSUER:-api.easymotion.devlocal}
      JWT_EXPIRES_IN: ${API_JWT_EXPIRES_IN:-1800s}
      JWT_REFRESH_EXPIRES_IN: ${API_JWT_REFRESH_EXPIRES_IN:-4d}

    healthcheck:
      # Check if the API is up and running every 5 seconds for ~8 minutes
      test: ["CMD", "curl", "-f", "http://localhost:3000/swagger/json"]
      interval: 5s
      timeout: 5s
      retries: 100
      start_period: 5s
    command: npm run start:dev

  db:
    image: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      # add variable in .env to change port
      - "${PG_DEV_PORT:-5432}:5432"
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    depends_on:
      api:
        condition: service_started
      webapp:
        condition: service_started
    environment:
      CERT_PATH: "/certs"
      DOMAIN: "*.easymotion.devlocal"
    volumes:
      - "./nginx/dev.conf:/etc/nginx/conf.d/default.conf"
      - "./nginx/.ssl:/certs" # gitignored folder, contains dev ssl certificates
    ports:
      - 80:80
      - 443:443

  # Web-based PostgreSQL admin tool
  pgadmin:
    image: dpage/pgadmin4
    restart: "no"
    ports:
      # add variable in .env to change port
      - "${PG_ADMIN_PORT:-8083}:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: db@easymotion.devlocal
      PGADMIN_DEFAULT_PASSWORD: 1234
    volumes:
      - pgadmin_data:/var/lib/pgadmin

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "${MAIL_HOG_PORT:-8025}:8025"

volumes:
  pgdata:
  pgadmin_data:
